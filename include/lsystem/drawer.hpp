//
// Created by one_eyed_john on 18/05/23.
//

#ifndef L_SYSTEMS_DRAWER_HPP
#define L_SYSTEMS_DRAWER_HPP

#include <lsystem/renderer.hpp>
#include <lsystem/lsystem.hpp>

#include <glad/glad.h>
#include <GLFW/glfw3.h>
#include <glm/vec2.hpp>

#include <stack>

/**
 * \brief A class for drawing LSystems,
 * includes out string of this LSystem;
 * so, the whole figure is the stack of nodes
 * \param lineLength The length of segment connecting two nodes
 * \param rotationAngle The angle of rotation (relative to the vertical)
 */
class Drawer {
public:
    /**
     * \brief Node is the position of Drawer on the plane,
     * it is characterized by coordinates (x_, y_) and the angle of rotation (relative to the vertical) - angle_
     */
    struct Node {
        glm::dvec2 point;
        double angle = 45.;
    };

public:
    /// @brief String generated by LSystem
    std::string l_system_;

    /// @brief Stack of nodes
    std::stack<Node> nodes_stack = {};

    /// @brief Length of each segment
    double line_length_;

    /// @brief Angle of rotation (relative to the vertical)
    double rotation_angle_;

    /**
     * \brief Change rotation angle of stack's top
     */
    void turn_node(bool direction);

    /**
     * \brief Make a new Node, move on it and instructs Renderer to connect (draw!) it directly with the top one
     * \param render
     */
    void move_node(Renderer &render, bool should_draw = true);

public:
    /**
     * \param l_system_string The out string of LSystem
     * \param line_length The length of segment connecting two nodes; default is 5
     * \param rotation_angle The angle of rotation (relative to the vertical); default is 0
     * \param width The width of window; default is 500
     * \param height The height of window; default is 500
     */
    explicit Drawer(std::string l_system_string, double line_length = 10., double rotation_angle = 90.);

    ~Drawer() = default;

    Drawer(const Drawer &other) = default;

    Drawer &operator=(const Drawer &other) = default;

    Drawer(Drawer &&other) noexcept = default;

    Drawer &operator=(Drawer &&other) noexcept = default;

    /**
     * \brief Processes the string and makes OpenGL work: draws a segment (line) between top and new nodes
     * \param render
     */
    void Draw(Renderer &render);
};

#endif //L_SYSTEMS_DRAWER_HPP
