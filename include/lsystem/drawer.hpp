//
// Created by one_eyed_john on 18/05/23.
//

#ifndef L_SYSTEMS_DRAWER_HPP
#define L_SYSTEMS_DRAWER_HPP

#include <lsystem/renderer.hpp>
#include <lsystem/lsystem.hpp>

#include <glad/glad.h>
#include <GLFW/glfw3.h>
#include <glm/vec2.hpp>

#include <stack>

/**
 * \brief A class for drawing LSystems, processes and gives commands to Renderer
 */
class Drawer {
public:
    /**
     * \brief Node is position of Drawer on the plane,
     * it is characterized by double coordinates and the angle of rotation (relative to the vertical)
     */
    struct Node {
        glm::dvec2 point;
        double angle = 45.;
    };

public:
    /// @brief String generated by LSystem
    std::string l_system_;

    /// @brief Stack of nodes
    std::stack<Node> nodes_stack = {};

    /// @brief Length of each segment
    double line_length_;

    /// @brief Angle of rotation (relative to the vertical)
    double rotation_angle_;

    /**
     * \brief Change rotation angle of stack's top
     * * \param direction Is counterclockwise
     */
    void turn_node(bool direction);

    /**
     * \brief Make a new Node, move to it and instructs Renderer to draw it directly with the top one
     * \param render Instance of class Renderer
     * \param should_draw If we should draw (e.g. command 'f' means false)
     */
    void move_node(Renderer &render, bool should_draw = true);

public:
    /**
     * \param l_system_string The out string of LSystem
     * \param line_length The length of segment connecting two nodes; default is 5
     * \param rotation_angle The angle of rotation (relative to the vertical); default is 0
     */
    explicit Drawer(std::string l_system_string, double line_length = 10., double rotation_angle = 90.);

    ~Drawer() = default;

    /**
     * \brief Processes the string and makes Renderer work: draws a segment (line) between top and new node
     * \param render Instance of class Renderer
     */
    void Draw(Renderer &render);
};

#endif //L_SYSTEMS_DRAWER_HPP
